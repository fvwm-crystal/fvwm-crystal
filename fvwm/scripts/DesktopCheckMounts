#!/usr/bin/env bash

# FVWM-Crystal helper script that check for mount changes
# Usage: Exec exec $[FVWM_SYSTEMDIR]/scripts/DesktopCheckMounts <delay [s]> <optional PID>

#source "${FVWM_SYSTEMDIR}"/scripts/DesktopCheckParent

# be sure no old instance are runninng for the same fvwm parent or with no fvwm parent:
#PFExec="search_parent_pid"
#ParentFvwm=$(${PFExec} $$)
#for i in $(pgrep -f DesktopCheckMounts) ; do
#	if [[ $$ -ne ${i} ]] ; then
#		if [[ ${ParentFvwm} -eq $(${PFExec} ${i}) ]] || [[ "nofvwmp" == "$(${PFExec} ${i})" ]] ; then
#			kill ${i}
#    		fi
#	fi
#done

# delete PID file at exit
cleanup() {
	echo cleanup "$0"
	exit 0
}
trap "cleanup" SIGHUP SIGTERM SIGKILL

# We only want the partitions the user have access to => use their path
MountedP=$(mount|cut -d" " -f3)
check_access() {
	AccTo=""
	for part in $1 ; do
		if [[ $(ls "${part}" 2>/dev/null) ]] ; then
			AccTo="${AccTo} $part"
		fi
	done
	echo "${AccTo}"
}
MountedP="$(check_access "${MountedP}")"

# the main loop
while :
do
	sleep "$1"

	NMountedP=$(mount|cut -d" " -f3)
	NMountedP="$(check_access "${NMountedP}")"
	if [[ "$NMountedP" != "$MountedP" ]]; then
		MountedP="${NMountedP}"
		if [[ "${FVWM_IS_FVWM3}" == "1" ]]; then
			FvwmPrompt LoadDesktopIcons
		else
			FvwmCommand LoadDesktopIcons
		fi
	fi
done
